反射：在程序运行状态下，对于任意一个类，可以获取该类的属性和方法。。。 ;对于任意一个对象，也可以获取该对象的属性和方法。。。
以上操作称为反射，反射的实现主要通过Class类的实现
Class类:将所有类的共同点抽象出来，就成了Class类，Class类拥有了类的共性，Class类的实例化对象，其实是平时使用的所有类,每个类对应一个实例化对象
Class类的对象如何创建？
1、类名.方法名 。类名.class 静态属性：类名.属性名
2、对象名.getClass() :获取该对象对应的类在Class中的实例化对象
3、Class.forName(classname);:该方法需要接收一个类的完整路径 (全称)

选读：Class类的实例化除了可以是普通的类之外，还可以是基本数据类型（int double）、接口、void

反射必修类：
1、Class类:反射的基础类，所有的信息均保存在这个类中
2、Field属性类：将所有类的属性的相同点抽象出来，就是属性类。重点方法:(get、set)
3、Method；将所有类的属性的相同点抽象出来，就成了方法类了、重点方法：
4、	Constructor类：将所有类的属性的相同点抽象出来，可以调用任意的构造方法，重点方法； newInstance()

